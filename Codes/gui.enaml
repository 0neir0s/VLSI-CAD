from enaml.widgets.api import Window, Label, Field,Form,PushButton
from enaml.stdlib.fields import IntField
from basic import *

enamldef functionForm(Form):
    attr function
    Label:
        text = 'Number of variables'
    Field:variableField:
        text = ''
    Label:
        text = 'Ones'
    Field:mintermsO:
        text = ''
    Label:
        text = 'Dont Cares'
    Field:mintermsX:
        text = ''
    Label:
        text = 'Prime Implicants'
    Field:PI:
        read_only = True
        text = ''
    Label:
        text = 'Function'
    Field:Expr:
        read_only = True
        text = ''
    PushButton:
        text = 'Find'
        clicked ::
            if variableField.text != '':
                function.updateVariables([chr(i) for i in range(65,65+int(variableField.text),1)])
                primes,expression = passValues(function,str(mintermsO.text),str(mintermsX.text))
                Expr.text = unicode(expression)
                PI.text = unicode(primes)

enamldef functionView(Window):
    initial_size = (500,1000)
    attr function
    functionForm:
        function := parent.function


def passValues(function,ones,dc):
    ones = [int(i) for i in ones.strip().replace(',',' ').split()]
    dc = [int(i) for i in dc.strip().replace(',',' ').split()]
    primes = function.simplify(ones, dc)[1]  
    expression = function.get_function(primes)
    primes = ",".join("(%s,%s)" % tup for tup in primes)
    print expression
    print primes
    return primes,expression


'''
qm = QuineMcCluskey(['A','B','C','D'])
ones = [2,6,8,9,10,11,14,15]
dontcares = []
primes = qm.simplify(ones, dontcares)[1]
print(qm.get_function(primes))
'''