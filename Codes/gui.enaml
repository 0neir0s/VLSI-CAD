from enaml.widgets.api import Window, Label,Container, Field,Form,PushButton,Notebook,Page
from enaml.layout.api import vertical, horizontal, align, spacer, vbox, hbox
from enaml.stdlib.fields import IntField
from basic import *

enamldef functionForm(Form):
    attr function
    Container:
        Notebook: nbook:
            tab_style = 'preferences'
            Page:first:
                title = 'Minimization'
                closable = False
                tool_tip = 'Single function'
                Container:
                    constraints = [vbox(variableLabel,variableField,minterm_minsOL,minterm_minsO,minterm_minsXL,minterm_minsX,hbox(Find,spacer,Clear),PIL,PI,ExprL,Expr),]
                    Label:variableLabel:
                        text = 'Number of variables'
                    Field:variableField:
                        text = ''
                    Label:minterm_minsOL:
                        text = 'Ones'
                    Field:minterm_minsO:
                        text = ''
                    Label:minterm_minsXL:
                        text = 'Dont Cares'
                    Field:minterm_minsX:
                        text = ''
                    Label:PIL:
                        text = 'Prime Implicants'
                    Field:PI:
                        read_only = True
                        text = ''
                    Label:ExprL:
                        text = 'Function'
                    Field:Expr:
                        read_only = True
                        text = ''
                    PushButton:Find:
                        text = 'Find'
                        clicked ::
                            if variableField.text != '':
                                function.updateVariables([chr(i) for i in range(65+int(variableField.text)-1,64,-1)])
                                primes,expression = passValues(function,str(minterm_minsO.text),str(minterm_minsX.text))
                                Expr.text = unicode(expression)
                                PI.text = unicode(primes)
                    PushButton:Clear:
                        text = 'Clear'
                        clicked ::
                            variableField.text = ''
                            minterm_minsO.text = ''
                            minterm_minsX.text = ''
                            Expr.text = ''
                            PI.text = ''
            Page:second:
                title = 'Shared Minimization'
                closable = False
                tool_tip = 'Two functions'
                Container:
                    constraints = [vbox(variableLabel2,variableField2,minterm_minsOL1,minterm_minsO1,minterm_minsOL2,minterm_minsO2,minterm_minsXL1,minterm_minsX1,minterm_minsXL2,minterm_minsX2,hbox(Find2,spacer,Clear2),ExprL1,Expr1,ExprL2,Expr2),]
                    Label:variableLabel2:
                        text = 'Number of variables'
                    Field:variableField2:
                        text = ''
                    Label:minterm_minsOL1:
                        text = 'Minterm_mins of function 1'
                    Field:minterm_minsO1:
                        text = ''
                    Label:minterm_minsXL1:
                        text = 'Dont Cares of function 1'
                    Field:minterm_minsX1:
                        text = ''
                    Label:minterm_minsOL2:
                        text = 'Minterm_mins of function 2'
                    Field:minterm_minsO2:
                        text = ''
                    Label:minterm_minsXL2:
                        text = 'Dont Cares of function 2'
                    Field:minterm_minsX2:
                        text = ''
                    Label:ExprL1:
                        text = 'Function 1'
                    Field:Expr1:
                        read_only = True
                        text = ''
                    Label:ExprL2:
                        text = 'Function 2'
                    Field:Expr2:
                        read_only = True
                        text = ''                    
                    PushButton:Find2:
                        text = 'Find'
                        clicked ::
                            if variableField2.text != '':
                                function.updateVariables([chr(i) for i in range(65+int(variableField2.text)-1,64,-1)])
                                prime_implicants1,covers1 = DpassValues(function,str(minterm_minsO1.text),str(minterm_minsX1.text))
                                prime_implicants2,covers2 = DpassValues(function,str(minterm_minsO2.text),str(minterm_minsX2.text))
                                min_cost = 99999999
                                for cover1 in covers1:
                                    for cover2 in covers2:
                                            implicant1 = [prime_implicants1[i] for i in list(cover1)]
                                            implicant2 = [prime_implicants2[i] for i in list(cover2)]
                                            cover = list(set().union(implicant1,implicant2))
                                            cost = function.calculate_cost(cover)
                                            if (cost < min_cost):
                                                min_cost = cost
                                                result1 = implicant1
                                                result2 = implicant2                                  
                            Expr1.text = unicode(function.readable_format(result1))
                            Expr2.text = unicode(function.readable_format(result2))
                    PushButton:Clear2:
                        text = 'Clear'
                        clicked ::
                            variableField2.text = ''
                            minterm_minsO2.text = ''
                            minterm_minsX2.text = ''
                            Expr2.text = ''
                            minterm_minsO1.text = ''
                            minterm_minsX1.text = ''
                            Expr1.text = ''



enamldef functionView(Window):
    initial_size = (500,450)
    attr function
    functionForm:
        function := parent.function


def passValues(function,ones,dc):
    ones = [int(i) for i in ones.strip().replace(',',' ').split()]
    dc = [int(i) for i in dc.strip().replace(',',' ').split()]
    _,primes = function.minimize(ones, dc)  
    expression = function.readable_format(primes)
    primes = ",".join("(%s,%s)" % tup for tup in primes)
    return primes,expression

def DpassValues(function,ones,dc):
    ones = [int(i) for i in ones.strip().replace(',',' ').split()]
    dc = [int(i) for i in dc.strip().replace(',',' ').split()]
    primes,_ = function.minimize(ones, dc)  
    covers = function.possible_covers(list(primes),ones)
    return primes,covers